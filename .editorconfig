# .editorconfig â€” OpenSettle (modern, 2025)
# Note: IDE0005 (unused usings) becomes build-enforceable when MSBuild sets:
# <GenerateDocumentationFile>true</GenerateDocumentationFile>. Keep as 'warning' for now.

root = true

[*.cs]
charset = utf-8
end_of_line = lf
insert_final_newline = true
indent_style = space
indent_size = 4

########################################
# Analyzer severity defaults (editor)
########################################
dotnet_analyzer_diagnostic.category-Style.severity = warning
dotnet_analyzer_diagnostic.category-Design.severity = warning
dotnet_analyzer_diagnostic.category-Naming.severity = warning

########################################
# Namespaces & modern syntax
########################################
csharp_style_namespace_declarations = file_scoped:error
csharp_prefer_simple_using_statement = true:warning
csharp_style_prefer_pattern_matching = true:suggestion
csharp_style_prefer_switch_expression = true:suggestion

########################################
# 'var' usage (balanced)
########################################
csharp_style_var_when_type_is_apparent = true:warning
csharp_style_var_for_built_in_types   = true:warning
csharp_style_var_elsewhere            = false:error

########################################
# Default literal
########################################
dotnet_diagnostic.IDE0160.severity = warning   # use 'default' literal
dotnet_diagnostic.IDE0161.severity = warning   # use 'default' in parameter defaults

########################################
# Unused usings & XML docs
########################################
dotnet_diagnostic.IDE0005.severity = warning   # consider 'error' after enabling XML docs
dotnet_diagnostic.CS1591.severity  = none      # missing XML comments (tune later)

########################################
# Readonly fields
########################################
dotnet_diagnostic.IDE0044.severity = warning   # make field readonly

########################################
# Object/collection initializers (modern)
########################################
dotnet_diagnostic.IDE0017.severity = warning   # object init can be simplified
dotnet_diagnostic.IDE0028.severity = warning   # collection init can be simplified
csharp_style_prefer_collection_expression = true:warning  # C# 12 '[]' expressions

########################################
# Naming rules
########################################

# Private/internal fields -> _camelCase
dotnet_naming_rule.private_fields_with_underscore.severity = warning
dotnet_naming_rule.private_fields_with_underscore.symbols  = private_fields
dotnet_naming_rule.private_fields_with_underscore.style    = camel_with_underscore

dotnet_naming_symbols.private_fields.applicable_kinds = field
dotnet_naming_symbols.private_fields.applicable_accessibilities = private, internal

dotnet_naming_style.camel_with_underscore.capitalization = camel_case
dotnet_naming_style.camel_with_underscore.required_prefix = _

# Constants -> PascalCase
dotnet_naming_rule.constants_pascalcase.severity = warning
dotnet_naming_rule.constants_pascalcase.symbols  = constants
dotnet_naming_rule.constants_pascalcase.style    = pascal_case_style

dotnet_naming_symbols.constants.applicable_kinds = field
dotnet_naming_symbols.constants.required_modifiers = const
dotnet_naming_style.pascal_case_style.capitalization = pascal_case

# Properties -> PascalCase
dotnet_naming_rule.properties_pascalcase.severity = warning
dotnet_naming_rule.properties_pascalcase.symbols  = properties
dotnet_naming_rule.properties_pascalcase.style    = pascal_case_style
dotnet_naming_symbols.properties.applicable_kinds = property

# Locals & parameters -> camelCase
dotnet_naming_rule.parameters_locals_camelcase.severity = warning
dotnet_naming_rule.parameters_locals_camelcase.symbols  = parameters_locals
dotnet_naming_rule.parameters_locals_camelcase.style    = camel_case_style
dotnet_naming_symbols.parameters_locals.applicable_kinds = parameter, local
dotnet_naming_style.camel_case_style.capitalization = camel_case

# Async methods must end with 'Async'
dotnet_naming_rule.async_methods_end_with_async.severity = warning
dotnet_naming_rule.async_methods_end_with_async.symbols  = async_methods
dotnet_naming_rule.async_methods_end_with_async.style    = end_with_async
dotnet_naming_symbols.async_methods.applicable_kinds = method
dotnet_naming_symbols.async_methods.applicable_accessibilities = public, internal, protected, private
dotnet_naming_symbols.async_methods.required_modifiers = async
dotnet_naming_style.end_with_async.capitalization = pascal_case
dotnet_naming_style.end_with_async.required_suffix = Async

# Interfaces must start with 'I'
dotnet_naming_rule.interfaces_start_with_i.severity = warning
dotnet_naming_rule.interfaces_start_with_i.symbols  = interfaces
dotnet_naming_rule.interfaces_start_with_i.style    = prefix_i
dotnet_naming_symbols.interfaces.applicable_kinds = interface
dotnet_naming_style.prefix_i.capitalization = pascal_case
dotnet_naming_style.prefix_i.required_prefix = I
